const fs = require("fs-extra");
const moment = require("moment-timezone");
const axios = require("axios");
const path = require("path");

module.exports.config = {
  name: "admin",
  version: "2.2.0",
  hasPermssion: 0,
  usePrefix: true,
  credits: "TOHI-BOT-HUB",
  description: "Show Bot Owner Info",
  commandCategory: "info",
  usages: "",
  cooldowns: 5
};

module.exports.run = async function({ api, event }) {
  const { threadID, messageID } = event;

  const now = moment().tz("Asia/Dhaka").format("DD/MM/YYYY hh:mm:ss A");
  const imageUrl = "https://i.postimg.cc/nhM2PPjW/admin.png";
  const imagePath = path.join(__dirname, "cache", `admin_${Date.now()}.png`);

  const ownerInfo =
    `‚ï≠‚îÄ‚îÄ‚îÄ„ÄîüëëùêÅùêéùêì ùêéùêñùêçùêÑùêë ùêàùêçùêÖùêéüëë„Äï‚îÄ‚îÄ‚îÄ‚ïÆ\n` +
    `‚îÉ\n` +
    `‚îÉ üè∑Ô∏è ùó°ùóÆùó∫ùó≤       : ùôè ùôä ùôÉ ùôÑ ùòø ùôê ùôá „ÉÉ\n` +
    `‚îÉ üë®‚Äçüíº ùóöùó≤ùóªùó±ùó≤ùóø     : ùó†ùóÆùóπùó≤\n` +
    `‚îÉ üíñ ùó•ùó≤ùóπùóÆùòÅùó∂ùóºùóª   : ùó¶ùó∂ùóªùó¥ùóπùó≤\n` +
    `‚îÉ üéÇ ùóîùó¥ùó≤         : 18+\n` +
    `‚îÉ üïå ùó•ùó≤ùóπùó∂ùó¥ùó∂ùóºùóª    : ùóúùòÄùóπùóÆùó∫\n` +
    `‚îÉ üéì ùóòùó±ùòÇùó∞ùóÆùòÅùó∂ùóºùóª  : ùóúùóªùòÅùó≤ùóø 1ùòÄùòÅ ùó¨ùó≤ùóÆùóø\n` +
    `‚îÉ üè† ùóîùó±ùó±ùóøùó≤ùòÄùòÄ    : ùóßùóµùóÆùó∏ùòÇùóøùó¥ùóÆùóºùóª, ùóïùóÆùóªùó¥ùóπùóÆùó±ùó≤ùòÄùóµ\n` +
    `‚îÉ\n` +
    `‚î£‚îÅ‚îÅ‚îÅ„Äî üåê ùó¶ùó¢ùóñùóúùóîùóü ùóüùóúùó°ùóûùó¶ „Äï‚îÅ‚îÅ‚îÅ‚î´\n` +
    `‚îÉ üé≠ TikTok    : -----------\n` +
    `‚îÉ ‚úàÔ∏è Telegram  : https://t.me/NFTTOHIDUL19\n` +
    `‚îÉ üåç Facebook  : https://www.facebook.com/profile.php?id=100092006324917\n` +
    `‚îÉ\n` +
    `‚î£‚îÅ‚îÅ‚îÅ„Äî ‚è∞ ùó®ùó£ùóóùóîùóßùóòùóó ùóßùóúùó†ùóò „Äï‚îÅ‚îÅ‚îÅ‚î´\n` +
    `‚îÉ üïí ${now}\n` +
    `‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n` +
    `üíå ùë™ùíìùíÜùíÇùíïùíÜùíÖ ùíÉùíö ùëªùë∂ùëØùë∞ùë´ùëºùë≥ ùë©ùë∂ùëª`;

  let loadingMsg;
  try {
    // Step 1: Send loading message (initial 45%)
    loadingMsg = await api.sendMessage(
      "‚è≥ ùêãùê®ùêöùêùùê¢ùêßùê† ùêéùê∞ùêßùêûùê´ ùêàùêßùêüùê®...\n\n[‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 45%",
      threadID
    );
    // Step 2: edit loading bar (super fast step)
    setTimeout(() => {
      api.editMessage(
        "‚è≥ ùêãùê®ùêöùêùùê¢ùêßùê† ùêéùê∞ùêßùêûùê´ ùêàùêßùêüùê®...\n\n[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 75%",
        loadingMsg.messageID,
        threadID
      );
    }, 100);

    setTimeout(() => {
      api.editMessage(
        "‚è≥ ùêãùê®ùêöùêùùê¢ùêßùê† ùêéùê∞ùêßùêûùê´ ùêàùêßùêüùê®...\n\n[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñë] 95%",
        loadingMsg.messageID,
        threadID
      );
    }, 200);

    // Step 3: Final 100% and process info
    setTimeout(async () => {
      try {
        await api.editMessage(
          "‚è≥ ùêãùê®ùêöùêùùê¢ùêßùê† ùêéùê∞ùêßùêûùê´ ùêàùêßùêüùê®...\n\n[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì] 100%",
          loadingMsg.messageID,
          threadID
        );
        // Download image
        const response = await axios({
          url: imageUrl,
          method: 'GET',
          responseType: 'stream',
          timeout: 10000
        });

        // Ensure cache directory exists
        const cacheDir = path.dirname(imagePath);
        if (!fs.existsSync(cacheDir)) fs.mkdirSync(cacheDir, { recursive: true });

        // Write image to cache
        const writer = fs.createWriteStream(imagePath);
        response.data.pipe(writer);

        await new Promise((resolve, reject) => {
          writer.on('finish', resolve);
          writer.on('error', reject);
        });

        // Unsend loading bar and send real info+image
        await api.unsendMessage(loadingMsg.messageID);

        await api.sendMessage({
          body: ownerInfo,
          attachment: fs.createReadStream(imagePath)
        }, threadID, () => {
          if (fs.existsSync(imagePath)) fs.unlinkSync(imagePath);
        });

      } catch (error) {
        await api.unsendMessage(loadingMsg.messageID);
        await api.sendMessage(ownerInfo + "\n\n[‚õî] ‡¶õ‡¶¨‡¶ø ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);
      }
    }, 350);

  } catch (error) {
    await api.sendMessage(ownerInfo + "\n\n[‚õî] ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶è ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!", threadID, messageID);
  }
};